#importing esential libraries
import cv2
import numpy as np

#intiating the HAAR_CASCADE classifiers for faces, eyes, smile, nose
faces_cascade = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')
eyes_cascade = cv2.CascadeClassifier('haarcascade_eye.xml')
nose_cascade = cv2.CascadeClassifier('haarcascade_nose.xml')
smile_cascade = cv2.CascadeClassifier('haarcascade_smile.xml')

#reading the frames from the camera and then using the cascadeclassifiers
capture = cv2.VideoCapture(0)
while(capture.isOpened()):
    ret, frame = capture.read()
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    faces = faces_cascade.detectMultiScale(gray, 1.3, 5)
    for (x,y,w,h) in faces:
        img = cv2.rectangle(frame,(x,y),(x+w,y+h),(0,255,255),2)
        roi_gray = gray[y:y+h, x:x+w]
        roi_color = frame[y:y+h, x:x+w]
        eyes = eyes_cascade.detectMultiScale(roi_gray,1.1,5)
        for (ex,ey,ew,eh) in eyes:
            cv2.rectangle(roi_color,(ex,ey),(ex+ew,ey+eh),(0,255,0),2) 
        nose = nose_cascade.detectMultiScale(roi_gray, scaleFactor=1.2, flags=6,minSize =(30,30),maxSize =(50,50))
        for (nx,ny,nw,nh) in nose:
            cv2.rectangle(roi_color, (nx,ny),(nx+nw,ny+nh),(255,0,0),2)
        if(len(nose)<1):
            cv2.putText(frame, "Wearing Mask", (int(x), int(y-10)), cv2.FONT_HERSHEY_SIMPLEX, 1, (0,255,0), 2, cv2.LINE_AA)
        else:
            cv2.putText(frame, "UnMasked", (int(x), int(y-10)), cv2.FONT_HERSHEY_SIMPLEX, 1, (0,255,0), 2, cv2.LINE_AA)
    cv2.imshow("Live_stream", frame)
    if(cv2.waitKey(10) & 0xFF == ord('x')):
        break
capture.release()
cv2.destroyAllWindows()
